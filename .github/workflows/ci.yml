# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [GitHubActionsSteps (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_ci --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: ci

on:
  push:
    branches:
      - master
      - next
    tags:
      - v*
  pull_request:
    branches:
      - master
      - next

jobs:
  Build:
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.1
        with:
          clean: 'false'
          fetch-depth: '0'
      - name: Fetch all history for all tags and branches
        run: |
          git fetch --prune
      - name: 🔨 Use .NET Core 2.1 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '2.1.x'
      - name: 🔨 Use .NET Core 3.1 SDK
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'
      - name: 🪓 **DOTNET HACK** 🪓
        shell: pwsh
        run: |
          $version = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Leaf;
          $root = Split-Path (Split-Path $ENV:DOTNET_ROOT -Parent) -Parent;
          $directories = Get-ChildItem $root | Where-Object { $_.Name -ne $version };
          foreach ($dir in $directories) {
          $from = $dir.FullName;
          $to = "$root/$version";
          Write-Host Copying from $from to $to;
          Copy-Item "$from\*" $to -Recurse -Force;
          }

      - name: 🎁 dotnet tool restore
        run: |
          dotnet tool restore
      - name: ☢️ nuke
        run: dotnet nuke
      - name: 🐿 Publish Coverage
        uses: codecov/codecov-action@v1.0.7
        with:
          name: 'actions-${{ matrix.os }}'
          fail_ci_if_error: 'true'
      - name: 🏺 Publish logs
        if: always()
        uses: actions/upload-artifact@v2.0.1
        with:
          name: 'logs'
          path: 'artifacts/logs/'
      - name: 🏺 Publish coverage data
        if: always()
        uses: actions/upload-artifact@v2.0.1
        with:
          name: 'coverage'
          path: 'coverage/'
      - name: 🏺 Publish test data
        if: always()
        uses: actions/upload-artifact@v2.0.1
        with:
          name: 'test data'
          path: 'artifacts/test/'
      - name: 🏺 Publish NuGet Packages
        if: always()
        uses: actions/upload-artifact@v2.0.1
        with:
          name: 'nuget'
          path: 'artifacts/nuget/'
